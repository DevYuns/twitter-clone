{"version":3,"sources":["fbInstance.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","e","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","document","getElementById","faTimes","Home","nweets","setNweets","useEffect","getData","orderBy","onSnapshot","snapshot","nweetArray","docs","map","data","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Router","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6d5e8822.chunk.js","sourcesContent":["import 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nimport firebase from 'firebase/app';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\n  appId: process.env.REACT_APP_APP_ID\n}\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import React, { useState } from \"react\";\n\nimport { authService } from \"fbInstance\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState('');\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n}\n\nexport default AuthForm;","import {authService, firebaseInstance} from 'fbInstance';\nimport {\n  faGithub,\n  faGoogle,\n  faTwitter,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nimport AuthForm from 'components/AuthForm';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\n\nconst Auth = () => {\n  const onSocialClick = async (e) => {\n    const {\n      target: { name },\n    } = e;\n    let provider;\n    if(name === 'google') {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if(name === 'github') {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  }\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;","import React, {useState} from 'react';\nimport {dbService, storageService} from 'fbInstance';\nimport { faPencilAlt, faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Nweet = ({nweetObj, isOwner}) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const onDeleteClick = async () => {\n    const isConfirmed = window.confirm('Are you sure you want to delete this nweet?');\n    if(isConfirmed) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  }\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet,\n    });\n    setEditing(false);\n  }\n\n  const onChange = (e) => {\n    const {\n      target: {value},\n    } = e;\n    setNewNweet(value);\n  }\n\n  const toggleEditing = () => setEditing(prev => !prev);\n  \n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n        {\n          isOwner && (\n            <>\n              <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                <input\n                  type=\"text\"\n                  placeholder=\"edit your nweet\" \n                  value={newNweet}\n                  onChange={onChange}\n                  required\n                  autoFocus\n                  className=\"formInput\"\n                />\n                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\"/>\n              </form> \n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                Cancel\n              </span>\n            </>\n          )\n        }\n        </>\n        ) : (\n          <>\n            <h4>{nweetObj.text}</h4>\n            {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\n            {isOwner && (\n              <div className=\"nweet__actions\">\n                <span onClick={onDeleteClick}>\n                  <FontAwesomeIcon icon={faTrash} />\n                </span>\n                <span onClick={toggleEditing}>\n                  <FontAwesomeIcon icon={faPencilAlt} />\n                </span>\n              </div>\n            )}\n          </>\n        )}\n    </div>\n  );\n}\n\nexport default Nweet;","import React, { useState } from 'react';\nimport {dbService, storageService} from 'fbInstance';\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { v4 as uuidv4 } from 'uuid';\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState('');\n  const [attachment, setAttachment] = useState('');\n  \n  const onSubmit = async (e) => {\n    if (nweet === \"\") {\n      return;\n    }\n    e.preventDefault();\n    let attachmentUrl = \"\";\n    if(attachment != \"\") {\n      const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    }\n    await dbService.collection('nweets').add(nweetObj);\n    setNweet('');\n    setAttachment('');\n  }\n\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setNweet(value); \n  }\n\n  const onFileChange = (e) => {\n    const {\n      target: { files },\n    } = e;\n\n    const theFile = files[0];\n    const reader = new FileReader();\n\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget : { result }\n      } = finishedEvent;\n      setAttachment(result);\n    }\n    reader.readAsDataURL(theFile);\n  }\n\n  const onClearAttachment = () => {\n    setAttachment('');\n    const fileUploadInput = document.getElementById(\"file\");\n    fileUploadInput.value = null;\n  }\n\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>)}\n  </form>\n)}\n\nexport default NweetFactory;","import React, { useEffect, useState } from 'react';\nimport {dbService, storageService} from 'fbInstance';\n\nimport Nweet from 'components/Nweet';\nimport NweetFactory from 'components/NweetFactory';\n\nconst Home = ({userObj}) => {\n  const [nweets, setNweets] = useState([]);\n\n  useEffect(() => {\n     const getData = dbService.collection('nweets').orderBy('createdAt', 'desc').onSnapshot(snapshot => {\n      const nweetArray = snapshot.docs.map(doc => ({\n        id: doc.id, ...doc.data()\n      }));\n      setNweets(nweetArray);\n    });\n    return () => getData();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj}/>\n      <div style={{ marginTop: 30 }}>\n        {nweets.map(nweet => {\n          return <Nweet nweetObj={nweet} key={nweet.id} isOwner={nweet.creatorId === userObj.uid}/>;\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Home;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {Link} from 'react-router-dom';\nimport React from 'react';\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => {\n  return (\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  )\n}\n\nexport default Navigation;","import React, { useState } from 'react';\nimport { authService, dbService } from 'fbInstance';\n\nimport {useHistory} from 'react-router-dom';\n\nconst Profile = ({ userObj, refreshUser }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push('/');\n  };\n\n  const getNweets = async () => {\n    const nweets = await dbService\n      .collection(\"nweets\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createdAt\")\n      .get();\n  }\n\n  const onChnage = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setNewDisplayName(value);\n  }\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if(userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n    }\n    refreshUser();\n  }\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input \n          type=\"text\"\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          onChange={onChnage}\n          autoFocus\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n       Log Out\n      </span>\n    </div>\n  )\n};\n\nexport default Profile;","import { HashRouter, Route, Switch } from 'react-router-dom';\n\nimport Auth from 'routes/Auth';\nimport Home from 'routes/Home';\nimport Navigation from 'components/Navigation';\nimport Profile from 'routes/Profile';\nimport React from 'react';\n\nconst Router = ({isLoggedIn, userObj, refreshUser}) => {\n  return (\n    <HashRouter>\n      {isLoggedIn && <Navigation userObj={userObj}/>}\n      <Switch>\n        <>\n          {isLoggedIn ? (\n            <div\n              style={{\n                maxWidth: 890,\n                width: \"100%\",\n                margin: \"0 auto\",\n                marginTop: 80,\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            > \n              <Route exact path=\"/\">\n                <Home userObj={userObj}/>\n              </Route>\n              <Route exact path=\"/profile\">\n                <Profile userObj={userObj} refreshUser={refreshUser}/>\n              </Route>\n            </div>\n              ) : (\n              <>\n                <Route exact path=\"/\">\n                  <Auth/>\n                </Route>\n              </>\n          )}\n        </>\n      </Switch>\n    </HashRouter>\n  )\n}\n\nexport default Router;","import React, { useEffect, useState } from 'react';\n\nimport Router from 'components/Router';\nimport {authService} from 'fbInstance';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, [])\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  }\n  \n  return (\n    <>\n      {init ? (\n        <Router\n          refreshUser={refreshUser} \n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n        ) : \"Initializing...\"\n      }\n    </>\n  );\n}\n\nexport default App;\n","import \"./styles.css\";\n\nimport App from './components/App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}